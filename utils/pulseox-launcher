#!/bin/bash
# Launches the pulseox program
#
# I set a keyboard key to run this script, so family/caregivers/nurses
# can launch it easily.
#
# It'll kill a running version of itself if it finds any.
# *Note: It kills pretty much anything it finds with 'pulseox' in the
#        command line!

# Set venv_pulseox to activate venv

# To use:
# 1. Set po_bin= the path of your pulseox-bluetooth.py
# 2. Run this script, or map a shortcut to run it.
venv_pulseox_act=~/venv/pulseox/bin/activate
debug=0
debug=2
debug=1

ourdir="$(dirname "$(readlink -f "$0")")"
ourname="${ourdir##*/}"

pulseox_bin_candidates=(
	"$ourdir/pulseox-bluetooth.py"
	"${ourdir%/utils}/pulseox-bluetooth.py"
	"$(which pulseox-bluetooth.py)"
)
for po_bin in "${pulseox_bin_candidates[@]}"; do
	[[ $debug -gt 0 ]] && echo "Checking for '$po_bin'"
	if [[ -x $po_bin ]]; then
		[[ $debug -gt 1 ]] && echo "Found and using ^"
		break
	fi
done
if [[ ! -x $po_bin ]]; then
	echo "Can't find pulseox-bluetooth.py. Aborting." >&2
	exit
fi

pkill_wr () {
	a="$1"
	#printf 'pkilling -e -f "%s"\n' "$a"
	[[ $debug -gt 1 ]] && printf 'pgrep -A -f "%s"\n' "$a"
	pids=$(pgrep -A -f "$a" | grep -v ^$$\$)
	[[ $debug -gt 1 ]] && printf 'Pids: {{%s}}' "$pids"
	sed -e 's/^/  /' <<<"$pids"
	if [[ -z "$pids" ]]; then
		[[ $debug -gt 1 ]] && echo "  Nothing found to kill"
	else
		# echo "WARNING. DEBUG MODE. NOT KILLING $pids"
		kill $pids
	fi
	#pkill -e -f "$a" | sed -e 's/^/  /'
}

pkill_pulseoxes () {
	pkill_wr 'bash [^ ]*pulseox'
	#pkill_wr 'bash.*pulseox[^-]'
	sleep .25
	pkill_wr 'bash [^ ]*pulseox-launcher'
	sleep .25
	pkill_wr 'python.*pulseox-bluetooth'
}
pkill_pulseoxes
[[ $debug -gt 1 ]] && echo "Our PID: $$"
# echo "Waiting for you (cat)"
# cat

[[ $debug -gt 0 ]] && echo "Activating venv..."
. "$venv_pulseox_act"

"$po_bin"  # Runs the pulseox-bluetooth.py script
